kubectl get configmaps

kubectl get secrets

kubectl describe secrets 

kubectl run nginx --image=nginx --restart=Never


################
[mysql]
user=prasad
password=prasad
[mysqld]
pid-file        = /var/run/mysqld/mysqld.pid
socket          = /var/run/mysqld/mysqld.sock
port            = 3306
datadir         = /var/lib/mysql
default-storage-engine = InnoDB
default_authentication_plugin= mysql_native_password
character-set-server = utf8
bind-address            = 127.0.0.1
general_log_file        = /var/log/mysql/mysql.log
log_error = /var/log/mysql/error.log
##############
    
    
# Create configmap using file
kubectl create configmap mysql-config --from-file=my.cnf 

kubectl get cm

kubectl describe mysql-config

# Create a mysql pod
kubectl run mysql-test --image=mysql:5.7 --env=MYSQL_ROOT_PASSWORD=password --restart=Never

kubectl exec -it mysql-test -- bash
    mysql # you will not be able to connect to the database
    mysql -u root -ppassword # you will be able to connect to the database
    
##############
apiVersion: v1
kind: Pod
metadata:
  name: mysql
  # labels:
  #   app: mysql-database
spec:
  volumes:
  - name: mysql-config-volume
    configMap:
      name: mysql-config
      items:
        - key: my.cnf
          path: .my.cnf

  containers:
  - name: mysql
    image: mysql:5.7
    env:
      - name: MYSQL_ROOT_PASSWORD
        value: password
      - name: MYSQL_USER
        value: prasad
      - name: MYSQL_PASSWORD
        value: prasad
      - name: MYSQL_DATABASE
        value: prasad
    volumeMounts:
    - name: mysql-config-volume
      mountPath: /root/   
################

# Create a pod
kubectl apply -f config.yml

kubectl exec -it mysql -- bash
    mysql # you will get connected to the database because of the /root/.my.cnf file which is created and mounted by the configmap

# update the configmap and observe that it will automatically update inside the pod


# Create configmap using environment variables
kubectl create configmap envconfigmap --from-literal=app=configmap

kubectl get cm

kubectl describe cm envconfigmap

############################################## config.yml
apiVersion: v1
kind: Pod
metadata:
  name: mysql
  # labels:
  #   app: mysql-database
spec:
  volumes:
  - name: mysql-config-volume
    configMap:
      name: mysql-config
      items:
        - key: my.cnf
          path: .my.cnf

  containers:
  - name: mysql
    image: mysql:5.7
    env:
      - name: MYSQL_ROOT_PASSWORD
        value: password
      - name: MYSQL_USER
        value: prasad
      - name: MYSQL_PASSWORD
        value: prasad
      - name: MYSQL_DATABASE
        value: prasad
    volumeMounts:
    - name: mysql-config-volume
      mountPath: /root/
    envFrom:
    - configMapRef:
         name: envconfigmap
######################################### config.yml

kubectl apply -f config.yml

kubectl exec -it mysql -- bash
       env
       cat /root/.my.cnf
       mysql
       
echo  'prasad' | base64

echo  'cHJhc2FkCg==' | base64 -d

################################## secrets.yml
apiVersion: v1
kind: Secret
metadata:
  name:  mysql-secrets
data:
   mysql_user:  cHJhc2Fk
   mysql_user_password: cHJhc2Fk
   mysql_root_password: cGFzc3dvcmQ=
type: Opaque
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-configmap
data:
  .my.cnf: |
    [mysql]
    user=$MYSQL_USERNAME
    password=$MYSQL_PASSWORD
    [mysqld]
    pid-file        = /var/run/mysqld/mysqld.pid
    socket          = /var/run/mysqld/mysqld.sock
    default_authentication_plugin= mysql_native_password
    port            = 3306
    datadir         = /var/lib/mysql
    default-storage-engine = InnoDB
    character-set-server = utf8
    general_log_file        = /var/log/mysql/mysql.log
    log_error = /var/log/mysql/error.log
---
apiVersion: v1
kind: Pod
metadata:
  name: mysql
  labels:
    app: mysql-database
spec:
  volumes:
  - name: mysql-config-volume
    configMap:
      name: mysql-configmap
      items:
        - key: .my.cnf
          path: .my.cnf

  containers:
  - name: mysql
    image: mysql:5.7
    env:
      - name: MYSQL_ROOT_PASSWORD
        valueFrom:
          secretKeyRef:
            name: mysql-secrets
            key: mysql_root_password
      - name: MYSQL_USER
        valueFrom:
          secretKeyRef:
            name: mysql-secrets
            key: mysql_user
      - name: MYSQL_PASSWORD
        valueFrom:
          secretKeyRef:
            name: mysql-secrets
            key: mysql_user_password
      - name: MYSQL_DATABASE
        value: prasad
    volumeMounts:
    - name: mysql-config-volume
      mountPath: /root/ 
  #################################################### secrets.yml

kubectl apply -f secrets.yml
      
kubectl exec -it mysql -- bash
      mysql -u $MYSQL_USER -p$MYSQL_PASSWORD
      



